// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/image/image.proto

package image

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PullRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Repo                 string   `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Tag                  string   `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRequest) Reset()         { *m = PullRequest{} }
func (m *PullRequest) String() string { return proto.CompactTextString(m) }
func (*PullRequest) ProtoMessage()    {}
func (*PullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea1601d38c23c01d, []int{0}
}

func (m *PullRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRequest.Unmarshal(m, b)
}
func (m *PullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRequest.Marshal(b, m, deterministic)
}
func (m *PullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRequest.Merge(m, src)
}
func (m *PullRequest) XXX_Size() int {
	return xxx_messageInfo_PullRequest.Size(m)
}
func (m *PullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullRequest proto.InternalMessageInfo

func (m *PullRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PullRequest) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *PullRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type PullResponse struct {
	Results              *Result  `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullResponse) Reset()         { *m = PullResponse{} }
func (m *PullResponse) String() string { return proto.CompactTextString(m) }
func (*PullResponse) ProtoMessage()    {}
func (*PullResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea1601d38c23c01d, []int{1}
}

func (m *PullResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullResponse.Unmarshal(m, b)
}
func (m *PullResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullResponse.Marshal(b, m, deterministic)
}
func (m *PullResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullResponse.Merge(m, src)
}
func (m *PullResponse) XXX_Size() int {
	return xxx_messageInfo_PullResponse.Size(m)
}
func (m *PullResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullResponse proto.InternalMessageInfo

func (m *PullResponse) GetResults() *Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type Result struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_ea1601d38c23c01d, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*PullRequest)(nil), "PullRequest")
	proto.RegisterType((*PullResponse)(nil), "PullResponse")
	proto.RegisterType((*Result)(nil), "Result")
}

func init() { proto.RegisterFile("pkg/image/image.proto", fileDescriptor_ea1601d38c23c01d) }

var fileDescriptor_ea1601d38c23c01d = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xc1, 0x8a, 0xc2, 0x30,
	0x10, 0x40, 0xb7, 0xdb, 0xd2, 0xb2, 0xd3, 0x2e, 0x2c, 0x81, 0x85, 0xe0, 0x49, 0x03, 0x82, 0xa7,
	0x14, 0xab, 0xff, 0xe0, 0x55, 0xf2, 0x07, 0x15, 0x86, 0x28, 0xb6, 0x26, 0x66, 0xd2, 0xff, 0x97,
	0x24, 0x56, 0x7a, 0x09, 0x6f, 0xde, 0xe1, 0x4d, 0x06, 0xfe, 0xed, 0x5d, 0xb7, 0xb7, 0xb1, 0xd7,
	0x98, 0x5e, 0x69, 0x9d, 0xf1, 0x46, 0x9c, 0xa0, 0x3e, 0x4f, 0xc3, 0xa0, 0xf0, 0x39, 0x21, 0x79,
	0xc6, 0xa0, 0xb8, 0x1a, 0xf2, 0x3c, 0x5b, 0x67, 0xbb, 0x1f, 0x15, 0x39, 0x38, 0x87, 0xd6, 0xf0,
	0xef, 0xe4, 0x02, 0xb3, 0x3f, 0xc8, 0x7d, 0xaf, 0x79, 0x1e, 0x55, 0x40, 0xb1, 0x87, 0x26, 0x85,
	0xc8, 0x9a, 0x07, 0x21, 0xdb, 0x40, 0xe5, 0x90, 0xa6, 0xc1, 0x53, 0x8c, 0xd5, 0x5d, 0x25, 0x55,
	0x9c, 0xd5, 0xec, 0xc5, 0x11, 0xca, 0xa4, 0xe6, 0x5c, 0xf6, 0xc9, 0x31, 0x0e, 0xd5, 0x88, 0x44,
	0xbd, 0xc6, 0xf7, 0xde, 0x79, 0xec, 0x5a, 0x28, 0xc3, 0x22, 0x74, 0x6c, 0x0b, 0x45, 0x20, 0xd6,
	0xc8, 0xc5, 0x09, 0xab, 0x5f, 0xb9, 0xfc, 0x87, 0xf8, 0xba, 0x94, 0xf1, 0xd2, 0xc3, 0x2b, 0x00,
	0x00, 0xff, 0xff, 0x83, 0xb2, 0x61, 0x2e, 0x02, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PullerClient is the client API for Puller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PullerClient interface {
	Pull(ctx context.Context, in *PullRequest, opts ...grpc.CallOption) (*PullResponse, error)
}

type pullerClient struct {
	cc *grpc.ClientConn
}

func NewPullerClient(cc *grpc.ClientConn) PullerClient {
	return &pullerClient{cc}
}

func (c *pullerClient) Pull(ctx context.Context, in *PullRequest, opts ...grpc.CallOption) (*PullResponse, error) {
	out := new(PullResponse)
	err := c.cc.Invoke(ctx, "/Puller/Pull", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PullerServer is the server API for Puller service.
type PullerServer interface {
	Pull(context.Context, *PullRequest) (*PullResponse, error)
}

func RegisterPullerServer(s *grpc.Server, srv PullerServer) {
	s.RegisterService(&_Puller_serviceDesc, srv)
}

func _Puller_Pull_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PullerServer).Pull(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Puller/Pull",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PullerServer).Pull(ctx, req.(*PullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Puller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Puller",
	HandlerType: (*PullerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Pull",
			Handler:    _Puller_Pull_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/image/image.proto",
}
